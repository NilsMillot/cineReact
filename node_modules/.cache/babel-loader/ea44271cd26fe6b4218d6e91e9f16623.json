{"ast":null,"code":"var _jsxFileName = \"/Users/nils/Documents/cinereact/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport { FilmCard } from './components/filmCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [dataLiked, setDataLiked] = useState([]);\n  useEffect(() => {\n    const getMovieRequest = async () => {\n      const result = await axios('https://api.themoviedb.org/3/discover/tv?api_key=92b418e837b833be308bbfb1fb2aca1e&language=fr-FR&sort_by=popularity.desc&page=1&timezone=America/New_York&include_null_first_air_dates=false');\n      setData(result.data.results);\n    };\n\n    getMovieRequest();\n  }, []);\n  const [currentId, setCurrentId] = useState(0);\n\n  const onClickLike = id => {\n    const film = findItemInArrayOfObject(data, id);\n\n    if (findItemInArrayOfObject(dataLiked, id)) {\n      onDeleteFilmOnDataLiked(findItemInArrayOfObject(dataLiked, id));\n      alert('déjà ajouté !');\n    } else {\n      setDataLiked([...dataLiked, film]);\n    } // console.log('%cApp.tsx line:31 new Set(dataLiked)', 'color: #007acc;', new Set(dataLiked));\n    // console.log('filter', filteredArray(dataLiked))\n\n  };\n\n  const findItemInArrayOfObject = (arrayOfObject, id, keyOfId = 'id') => {\n    const obj = arrayOfObject.find(x => x[keyOfId] === id);\n    return obj;\n  };\n\n  const onDeleteFilmOnData = id => {\n    const upDateList = data.filter(v => v.id !== id);\n    setData([...upDateList]);\n  };\n\n  const onDeleteFilmOnDataLiked = id => {\n    // const upDateList = dataLiked.filter((v) => v.id !== id)\n    // setDataLiked([...upDateList])\n    console.log('updatedlist', dataLiked.filter(v => v !== id));\n  };\n\n  const filteredArray = arrayOfObject => {\n    arrayOfObject.filter(function (ele, pos) {\n      return arrayOfObject.indexOf(ele) == pos;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cine React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Films et s\\xE9ries du moment aux US\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        className: \"image-container\",\n        children: data.map(item => /*#__PURE__*/_jsxDEV(FilmCard, {\n          id: item.id,\n          name: item.name,\n          textOverview: item.overview,\n          poster_path: item.poster_path,\n          backdrop_path: item.backdrop_path,\n          date: item.first_air_date,\n          vote_average: item.vote_average,\n          totalLikes: item.popularity,\n          vote_count: item.vote_count,\n          onClickLike: onClickLike\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Films et s\\xE9ries en favoris\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        className: \"image-container\",\n        children: dataLiked.map(item => /*#__PURE__*/_jsxDEV(FilmCard, {\n          id: item.id,\n          name: item.name,\n          textOverview: item.overview,\n          poster_path: item.poster_path,\n          backdrop_path: item.backdrop_path,\n          date: item.first_air_date,\n          vote_average: item.vote_average,\n          totalLikes: item.popularity,\n          vote_count: item.vote_count,\n          onClickLike: onClickLike\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5xdaLEUxd4ndzbA6T+W60ec4qUk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nils/Documents/cinereact/src/App.tsx"],"names":["Box","axios","React","useEffect","useState","FilmCard","App","data","setData","dataLiked","setDataLiked","getMovieRequest","result","results","currentId","setCurrentId","onClickLike","id","film","findItemInArrayOfObject","onDeleteFilmOnDataLiked","alert","arrayOfObject","keyOfId","obj","find","x","onDeleteFilmOnData","upDateList","filter","v","console","log","filteredArray","ele","pos","indexOf","map","item","name","overview","poster_path","backdrop_path","first_air_date","vote_average","popularity","vote_count"],"mappings":"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","sourcesContent":["import { Box } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport { FilmCard } from './components/filmCard';\n\nfunction App() {\n\n  const [data, setData] = useState<any[]>([]); \n  const [dataLiked, setDataLiked] = useState<any[]>([]);\n\n  useEffect(() => {\n    const getMovieRequest = async () => {\n      const result = await axios(\n        'https://api.themoviedb.org/3/discover/tv?api_key=92b418e837b833be308bbfb1fb2aca1e&language=fr-FR&sort_by=popularity.desc&page=1&timezone=America/New_York&include_null_first_air_dates=false',\n      );\n      setData(result.data.results);\n    }\n    getMovieRequest();\n  },[])\n\n\n  const [currentId, setCurrentId] = useState(0)\n  const onClickLike = (id: number) => {\n    const film = findItemInArrayOfObject(data, id)\n    if(findItemInArrayOfObject(dataLiked, id)){\n      onDeleteFilmOnDataLiked(findItemInArrayOfObject(dataLiked, id))\n      alert('déjà ajouté !')\n    } else {\n      setDataLiked([...dataLiked, film])\n    }\n    // console.log('%cApp.tsx line:31 new Set(dataLiked)', 'color: #007acc;', new Set(dataLiked));\n    \n    // console.log('filter', filteredArray(dataLiked))\n  }\n\n  const findItemInArrayOfObject = (\n    arrayOfObject: Array<Record<string, any>>,\n    id: number,\n    keyOfId = 'id',\n  ): Record<string, any> | undefined => {\n    const obj = arrayOfObject.find((x) => x[keyOfId] === id) \n    return obj\n  }\n\n  const onDeleteFilmOnData = (id: any): void => {\n    const upDateList = data.filter((v) => v.id !== id)\n    setData([...upDateList])\n  }\n  \n  const onDeleteFilmOnDataLiked = (id: any): void => {\n    // const upDateList = dataLiked.filter((v) => v.id !== id)\n    // setDataLiked([...upDateList])\n    console.log('updatedlist', dataLiked.filter((v) => v !== id))\n  }\n\n  const filteredArray = (\n    arrayOfObject: Array<Record<string, any>>,\n  ): void => {\n    arrayOfObject.filter(function(ele , pos){\n      return arrayOfObject.indexOf(ele) == pos;\n  })}\n\n  return (\n    <Box className=\"App\">\n      <header className=\"App-header\">\n        <h1>Cine React</h1>\n      </header>\n      <section className=\"Section\">\n        <h1>Films et séries du moment aux US</h1>\n        <Box display=\"flex\" flexDirection=\"row\" className=\"image-container\">\n          {data.map(item => (\n            <FilmCard \n              key={item.id}\n              id={item.id}\n              name={item.name} \n              textOverview={item.overview} \n              poster_path={item.poster_path} \n              backdrop_path={item.backdrop_path}\n              date={item.first_air_date}\n              vote_average={item.vote_average}\n              totalLikes={item.popularity}\n              vote_count={item.vote_count}\n              onClickLike={onClickLike}\n            />              \n          ))}\n        </Box>\n      </section>\n      <section className=\"Section\">\n        <h1>Films et séries en favoris</h1>\n        <Box display=\"flex\" flexDirection=\"row\" className=\"image-container\">\n          {dataLiked.map(item => (\n            <FilmCard \n              key={item.id}\n              id={item.id}\n              name={item.name} \n              textOverview={item.overview} \n              poster_path={item.poster_path} \n              backdrop_path={item.backdrop_path}\n              date={item.first_air_date}\n              vote_average={item.vote_average}\n              totalLikes={item.popularity}\n              vote_count={item.vote_count}\n              onClickLike={onClickLike}\n            />              \n          ))}\n        </Box>\n      </section>\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}