{"ast":null,"code":"var _jsxFileName = \"/Users/nils/Documents/cinereact/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport { FilmCard } from './components/filmCard';\nimport { PopupModal } from './components/popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [dataLiked, setDataLiked] = useState([]);\n  useEffect(() => {\n    const getMovieRequest = async () => {\n      const result = await axios('https://api.themoviedb.org/3/discover/tv?api_key=92b418e837b833be308bbfb1fb2aca1e&language=fr-FR&sort_by=popularity.desc&page=1&timezone=America/New_York&include_null_first_air_dates=false');\n      setData(result.data.results);\n    };\n\n    getMovieRequest();\n  }, []);\n\n  const onClickLike = id => {\n    const film = findItemInArrayOfObject(data, id);\n\n    if (findItemInArrayOfObject(dataLiked, id)) {\n      setData([...data, findItemInArrayOfObject(dataLiked, id)]);\n      const newList = dataLiked.filter(v => v !== findItemInArrayOfObject(dataLiked, id));\n      setDataLiked([...newList]);\n    } else {\n      setDataLiked([...dataLiked, film]);\n      const newList = data.filter(v => v !== findItemInArrayOfObject(data, id));\n      setData([...newList]);\n    }\n\n    ;\n  };\n\n  const findItemInArrayOfObject = (arrayOfObject, id, keyOfId = 'id') => {\n    const obj = arrayOfObject.find(x => x[keyOfId] === id);\n    return obj;\n  };\n\n  const [currentId, setCurrentId] = useState(0);\n  const [openPopup, setOpenPopup] = useState(false);\n\n  const onClickShare = id => {\n    // const film = findItemInArrayOfObject(data, id);\n    setOpenPopup(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cine React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Films et s\\xE9ries du moment aux US\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupModal, {\n        title: \"cc\",\n        desc: \"cc\",\n        openPopup: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        className: \"image-container\",\n        children: data.map(item => /*#__PURE__*/_jsxDEV(FilmCard, {\n          id: item.id,\n          name: item.name,\n          textOverview: item.overview,\n          poster_path: item.poster_path,\n          backdrop_path: item.backdrop_path,\n          date: item.first_air_date,\n          vote_average: item.vote_average,\n          totalLikes: item.popularity,\n          vote_count: item.vote_count,\n          onClickLike: onClickLike,\n          onClickShare: onClickShare\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Section\",\n      children: [dataLiked.length !== 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Films et s\\xE9ries en favoris\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        className: \"image-container\",\n        children: dataLiked.map(item => /*#__PURE__*/_jsxDEV(FilmCard, {\n          liked: true,\n          id: item.id,\n          name: item.name,\n          textOverview: item.overview,\n          poster_path: item.poster_path,\n          backdrop_path: item.backdrop_path,\n          date: item.first_air_date,\n          vote_average: item.vote_average,\n          totalLikes: item.popularity,\n          vote_count: item.vote_count,\n          onClickLike: onClickLike,\n          onClickShare: onClickShare\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cnukdyboVvO2B1s2wlN7+A3edPs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nils/Documents/cinereact/src/App.tsx"],"names":["Box","axios","React","useEffect","useState","FilmCard","PopupModal","App","data","setData","dataLiked","setDataLiked","getMovieRequest","result","results","onClickLike","id","film","findItemInArrayOfObject","newList","filter","v","arrayOfObject","keyOfId","obj","find","x","currentId","setCurrentId","openPopup","setOpenPopup","onClickShare","map","item","name","overview","poster_path","backdrop_path","first_air_date","vote_average","popularity","vote_count","length"],"mappings":"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","sourcesContent":["import { Box } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport { FilmCard } from './components/filmCard';\nimport { PopupModal } from './components/popup';\n\nfunction App() {\n\n  const [data, setData] = useState<any[]>([]); \n  const [dataLiked, setDataLiked] = useState<any[]>([]);\n\n  useEffect(() => {\n    const getMovieRequest = async () => {\n      const result = await axios(\n        'https://api.themoviedb.org/3/discover/tv?api_key=92b418e837b833be308bbfb1fb2aca1e&language=fr-FR&sort_by=popularity.desc&page=1&timezone=America/New_York&include_null_first_air_dates=false',\n      );\n      setData(result.data.results);\n    }\n    getMovieRequest();\n  },[]);\n\n  \n  const onClickLike = (id: number) => {\n    const film = findItemInArrayOfObject(data, id);\n    if(findItemInArrayOfObject(dataLiked, id)){\n      setData([...data, findItemInArrayOfObject(dataLiked, id)]);\n      const newList = dataLiked.filter((v) => v !== findItemInArrayOfObject(dataLiked, id));\n      setDataLiked([...newList]);\n    } else {\n      setDataLiked([...dataLiked, film]);\n      const newList = data.filter((v) => v !== findItemInArrayOfObject(data, id));\n      setData([...newList]);\n    };\n  };\n\n  const findItemInArrayOfObject = (\n    arrayOfObject: Array<Record<string, any>>,\n    id: number,\n    keyOfId = 'id',\n  ): Record<string, any> | undefined => {\n    const obj = arrayOfObject.find((x) => x[keyOfId] === id);\n    return obj;\n  }\n\n  const [currentId, setCurrentId] = useState(0);\n  const [openPopup, setOpenPopup] = useState(false);\n\n  const onClickShare = (id: number) => {\n    // const film = findItemInArrayOfObject(data, id);\n    setOpenPopup(true);\n  };\n\n  return (\n    <Box className=\"App\">\n      <header className=\"App-header\">\n        <h1>Cine React</h1>\n      </header>\n      <section className=\"Section\">\n        <h1>Films et séries du moment aux US</h1>\n        <PopupModal title=\"cc\" desc=\"cc\" openPopup={true} />\n        <Box display=\"flex\" flexDirection=\"row\" className=\"image-container\">\n          {data.map(item => (\n            <FilmCard \n              key={item.id}\n              id={item.id}\n              name={item.name} \n              textOverview={item.overview} \n              poster_path={item.poster_path} \n              backdrop_path={item.backdrop_path}\n              date={item.first_air_date}\n              vote_average={item.vote_average}\n              totalLikes={item.popularity}\n              vote_count={item.vote_count}\n              onClickLike={onClickLike}\n              onClickShare={onClickShare}\n            />              \n          ))}\n        </Box>\n      </section>\n      <section className=\"Section\">\n        {dataLiked.length !== 0 && <h1>Films et séries en favoris</h1>}\n        <Box display=\"flex\" flexDirection=\"row\" className=\"image-container\">\n          {dataLiked.map(item => (\n            <FilmCard \n              liked\n              key={item.id}\n              id={item.id}\n              name={item.name} \n              textOverview={item.overview} \n              poster_path={item.poster_path} \n              backdrop_path={item.backdrop_path}\n              date={item.first_air_date}\n              vote_average={item.vote_average}\n              totalLikes={item.popularity}\n              vote_count={item.vote_count}\n              onClickLike={onClickLike}\n              onClickShare={onClickShare}\n            />              \n          ))}\n        </Box>\n      </section>\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}