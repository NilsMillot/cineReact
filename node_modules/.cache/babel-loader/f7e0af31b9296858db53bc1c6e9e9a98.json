{"ast":null,"code":"var _jsxFileName = \"/Users/nils/Documents/cinereact/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport { FilmCard } from './components/filmCard';\nimport { PopupModal } from './components/popup';\nimport { findItemInArrayOfObject } from './utils/functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [dataLiked, setDataLiked] = useState([]);\n  useEffect(() => {\n    const getMovieRequest = async () => {\n      const result = await axios('https://api.themoviedb.org/3/discover/tv?api_key=92b418e837b833be308bbfb1fb2aca1e&language=fr-FR&sort_by=popularity.desc&page=1&timezone=America/New_York&include_null_first_air_dates=false');\n      setData(result.data.results);\n    };\n\n    getMovieRequest();\n  }, []);\n\n  const onClickLike = id => {\n    const film = findItemInArrayOfObject(data, id);\n\n    if (findItemInArrayOfObject(dataLiked, id)) {\n      setData([...data, findItemInArrayOfObject(dataLiked, id)]);\n      const newList = dataLiked.filter(v => v !== findItemInArrayOfObject(dataLiked, id));\n      setDataLiked([...newList]);\n    } else {\n      setDataLiked([...dataLiked, film]); // const newList = data.filter((v) => v !== findItemInArrayOfObject(data, id));\n\n      const newList = data.filter(v => v !== film);\n      setData([...newList]);\n    }\n\n    ;\n  };\n\n  const [currentFilm, setCurrentFilm] = useState();\n  const [openPopup, setOpenPopup] = useState(false);\n\n  const onClickShare = id => {\n    const film = findItemInArrayOfObject(data, id);\n    setCurrentFilm(film);\n    setOpenPopup(true);\n  };\n\n  const onClickDelete = id => {\n    const film = findItemInArrayOfObject(data, id);\n    const newList = data.filter(v => v !== film);\n    setData([...newList]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cine React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Films et s\\xE9ries du moment aux US\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupModal, {\n        title: currentFilm !== undefined && currentFilm.name,\n        image: currentFilm !== undefined && currentFilm.backdrop_path,\n        openPopup: openPopup,\n        setOpenPopup: setOpenPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        className: \"image-container\",\n        children: data.map(item => /*#__PURE__*/_jsxDEV(FilmCard, {\n          id: item.id,\n          name: item.name,\n          textOverview: item.overview,\n          poster_path: item.poster_path,\n          backdrop_path: item.backdrop_path,\n          date: item.first_air_date,\n          vote_average: item.vote_average,\n          totalLikes: item.popularity,\n          vote_count: item.vote_count,\n          onClickLike: onClickLike,\n          onClickShare: onClickShare,\n          onClickDelete: onClickDelete\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"Section\",\n      children: [dataLiked.length !== 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Films et s\\xE9ries en favoris\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"row\",\n        className: \"image-container\",\n        children: dataLiked.map(item => /*#__PURE__*/_jsxDEV(FilmCard, {\n          liked: true,\n          id: item.id,\n          name: item.name,\n          textOverview: item.overview,\n          poster_path: item.poster_path,\n          backdrop_path: item.backdrop_path,\n          date: item.first_air_date,\n          vote_average: item.vote_average,\n          totalLikes: item.popularity,\n          vote_count: item.vote_count,\n          onClickLike: onClickLike,\n          onClickShare: onClickShare,\n          onClickDelete: onClickDelete\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YbCONopiOIRmKqzXyMZmqcivXrw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nils/Documents/cinereact/src/App.tsx"],"names":["Box","axios","React","useEffect","useState","FilmCard","PopupModal","findItemInArrayOfObject","App","data","setData","dataLiked","setDataLiked","getMovieRequest","result","results","onClickLike","id","film","newList","filter","v","currentFilm","setCurrentFilm","openPopup","setOpenPopup","onClickShare","onClickDelete","undefined","name","backdrop_path","map","item","overview","poster_path","first_air_date","vote_average","popularity","vote_count","length"],"mappings":"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","sourcesContent":["import { Box } from '@material-ui/core';\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport { FilmCard } from './components/filmCard';\nimport { PopupModal } from './components/popup';\nimport { findItemInArrayOfObject } from './utils/functions';\n\nfunction App() {\n\n  const [data, setData] = useState<any[]>([]); \n  const [dataLiked, setDataLiked] = useState<any[]>([]);\n\n  useEffect(() => {\n    const getMovieRequest = async () => {\n      const result = await axios(\n        'https://api.themoviedb.org/3/discover/tv?api_key=92b418e837b833be308bbfb1fb2aca1e&language=fr-FR&sort_by=popularity.desc&page=1&timezone=America/New_York&include_null_first_air_dates=false',\n      );\n      setData(result.data.results);\n    }\n    getMovieRequest();\n  },[]);\n\n  \n  const onClickLike = (id: number) => {\n    const film = findItemInArrayOfObject(data, id);\n    if(findItemInArrayOfObject(dataLiked, id)){\n      setData([...data, findItemInArrayOfObject(dataLiked, id)]);\n      const newList = dataLiked.filter((v) => v !== findItemInArrayOfObject(dataLiked, id));\n      setDataLiked([...newList]);\n    } else {\n      setDataLiked([...dataLiked, film]);\n      // const newList = data.filter((v) => v !== findItemInArrayOfObject(data, id));\n      const newList = data.filter((v) => v !== film);\n      setData([...newList]);\n    };\n  };\n\n  const [currentFilm, setCurrentFilm] = useState<Record<string, any>>();\n  const [openPopup, setOpenPopup] = useState(false);\n\n  const onClickShare = (id: number) => {\n    const film = findItemInArrayOfObject(data, id);\n    setCurrentFilm(film);\n    setOpenPopup(true);\n  };\n\n  const onClickDelete = (id: number) => {\n    const film = findItemInArrayOfObject(data, id);\n    const newList = data.filter((v) => v !== film);\n    setData([...newList]);\n    };\n\n\n  return (\n    <Box className=\"App\">\n      <header className=\"App-header\">\n        <h1>Cine React</h1>\n      </header>\n      <section className=\"Section\">\n        <h1>Films et séries du moment aux US</h1>\n        <PopupModal \n          title={currentFilm !== undefined && currentFilm.name} \n          image={currentFilm !== undefined && currentFilm.backdrop_path} \n          openPopup={openPopup} \n          setOpenPopup={setOpenPopup} \n        />\n        <Box display=\"flex\" flexDirection=\"row\" className=\"image-container\">\n          {data.map(item => (\n            <FilmCard \n              key={item.id}\n              id={item.id}\n              name={item.name} \n              textOverview={item.overview} \n              poster_path={item.poster_path} \n              backdrop_path={item.backdrop_path}\n              date={item.first_air_date}\n              vote_average={item.vote_average}\n              totalLikes={item.popularity}\n              vote_count={item.vote_count}\n              onClickLike={onClickLike}\n              onClickShare={onClickShare}\n              onClickDelete={onClickDelete}\n            />              \n          ))}\n        </Box>\n      </section>\n      <section className=\"Section\">\n        {dataLiked.length !== 0 && <h1>Films et séries en favoris</h1>}\n        <Box display=\"flex\" flexDirection=\"row\" className=\"image-container\">\n          {dataLiked.map(item => (\n            <FilmCard \n              liked\n              key={item.id}\n              id={item.id}\n              name={item.name} \n              textOverview={item.overview} \n              poster_path={item.poster_path} \n              backdrop_path={item.backdrop_path}\n              date={item.first_air_date}\n              vote_average={item.vote_average}\n              totalLikes={item.popularity}\n              vote_count={item.vote_count}\n              onClickLike={onClickLike}\n              onClickShare={onClickShare}\n              onClickDelete={onClickDelete}\n            />              \n          ))}\n        </Box>\n      </section>\n    </Box>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}